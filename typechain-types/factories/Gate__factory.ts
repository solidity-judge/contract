/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Gate, GateInterface } from "../Gate";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "solution",
        type: "address",
      },
    ],
    name: "Deployment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "deployAndRun",
    outputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "string",
        name: "_username",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "solutionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "user",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "username",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b65806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063affed0e011610050578063affed0e014610104578063cf3d1af71461010d578063f399e22e1461012e57600080fd5b80632a768922146100775780634f8632ba146100aa57806361fac54d146100ef575b600080fd5b610097610085366004610624565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b6002546100ca9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a1565b6100f7610143565b6040516100a191906106b4565b61009760015481565b61012061011b3660046107e9565b6101d1565b6040516100a1929190610843565b61014161013c366004610865565b6102b5565b005b60038054610150906108bd565b80601f016020809104026020016040519081016040528092919081815260200182805461017c906108bd565b80156101c95780601f1061019e576101008083540402835291602001916101c9565b820191906000526020600020905b8154815290600101906020018083116101ac57829003601f168201915b505050505081565b60606000806101e1818087610493565b90505a6040517f09c5eabe00000000000000000000000000000000000000000000000000000000815290925073ffffffffffffffffffffffffffffffffffffffff8216906309c5eabe906102399087906004016106b4565b6000604051808303816000875af1158015610258573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261029e9190810190610910565b92505a6102ab9083610987565b9150509250929050565b600054610100900460ff16158080156102d55750600054600160ff909116105b806102ef5750303b1580156102ef575060005460ff166001145b610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156103de57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516179055600361042a8382610a15565b50801561048e57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60008084471015610500576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401610377565b825160000361056b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610377565b8383516020850187f5905073ffffffffffffffffffffffffffffffffffffffff81166105f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610377565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461061f57600080fd5b919050565b60006020828403121561063657600080fd5b61063f826105fb565b9392505050565b60005b83811015610661578181015183820152602001610649565b50506000910152565b60008151808452610682816020860160208601610646565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061063f602083018461066a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561073d5761073d6106c7565b604052919050565b600067ffffffffffffffff82111561075f5761075f6106c7565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600061079e61079984610745565b6106f6565b90508281528383830111156107b257600080fd5b828260208301376000602084830101529392505050565b600082601f8301126107da57600080fd5b61063f8383356020850161078b565b600080604083850312156107fc57600080fd5b823567ffffffffffffffff8082111561081457600080fd5b610820868387016107c9565b9350602085013591508082111561083657600080fd5b506102ab858286016107c9565b604081526000610856604083018561066a565b90508260208301529392505050565b6000806040838503121561087857600080fd5b610881836105fb565b9150602083013567ffffffffffffffff81111561089d57600080fd5b8301601f810185136108ae57600080fd5b6102ab8582356020840161078b565b600181811c908216806108d157607f821691505b60208210810361090a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561092257600080fd5b815167ffffffffffffffff81111561093957600080fd5b8201601f8101841361094a57600080fd5b805161095861079982610745565b81815285602083850101111561096d57600080fd5b61097e826020830160208601610646565b95945050505050565b818103818111156109c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b601f82111561048e57600081815260208120601f850160051c810160208610156109ee5750805b601f850160051c820191505b81811015610a0d578281556001016109fa565b505050505050565b815167ffffffffffffffff811115610a2f57610a2f6106c7565b610a4381610a3d84546108bd565b846109c7565b602080601f831160018114610a965760008415610a605750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610a0d565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015610ae357888601518255948401946001909101908401610ac4565b5085821015610b1f57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122040b44519361331ae58548469a6dfa30a126b80c252ff186288a2131113ea28a464736f6c63430008110033";

type GateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gate__factory extends ContractFactory {
  constructor(...args: GateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Gate";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Gate> {
    return super.deploy(overrides || {}) as Promise<Gate>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Gate {
    return super.attach(address) as Gate;
  }
  connect(signer: Signer): Gate__factory {
    return super.connect(signer) as Gate__factory;
  }
  static readonly contractName: "Gate";
  public readonly contractName: "Gate";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GateInterface {
    return new utils.Interface(_abi) as GateInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gate {
    return new Contract(address, _abi, signerOrProvider) as Gate;
  }
}
