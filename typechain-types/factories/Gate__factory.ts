/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Gate, GateInterface } from "../Gate";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "solution",
        type: "address",
      },
    ],
    name: "Deployment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "solution",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "deployAndRun",
    outputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "problem",
        type: "address",
      },
    ],
    name: "deployAndSubmit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "string",
        name: "_username",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "solutionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "user",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "username",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610eb9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c8063affed0e01161005b578063affed0e01461012c578063cf3d1af714610135578063ed91c63e14610148578063f399e22e1461015d57600080fd5b80627743601461008c5780632a768922146100c95780634f8632ba146100f757806361fac54d14610117575b600080fd5b61009f61009a3660046109f3565b610170565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100e96100d7366004610a4c565b60046020526000908152604090205481565b6040519081526020016100c0565b60025461009f9073ffffffffffffffffffffffffffffffffffffffff1681565b61011f61020a565b6040516100c09190610ad5565b6100e960015481565b61011f610143366004610ae8565b610298565b61015b610156366004610b4c565b6103e9565b005b61015b61016b366004610b9a565b6104ff565b60025460009073ffffffffffffffffffffffffffffffffffffffff1633146101f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6e6f74207573657200000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b610202826106d8565b90505b919050565b6003805461021790610bf2565b80601f016020809104026020016040519081016040528092919081815260200182805461024390610bf2565b80156102905780601f1061026557610100808354040283529160200191610290565b820191906000526020600020905b81548152906001019060200180831161027357829003601f168201915b505050505081565b60025460609073ffffffffffffffffffffffffffffffffffffffff16331461031c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6e6f74207573657200000000000000000000000000000000000000000000000060448201526064016101f0565b6000610327846106d8565b6040517f09c5eabe00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff8216906309c5eabe9061037c908690600401610ad5565b6000604051808303816000875af115801561039b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103e19190810190610c45565b949350505050565b60025473ffffffffffffffffffffffffffffffffffffffff16331461046a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f6e6f74207573657200000000000000000000000000000000000000000000000060448201526064016101f0565b6000610475836106d8565b6040517f323fab3d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192509083169063323fab3d90602401600060405180830381600087803b1580156104e257600080fd5b505af11580156104f6573d6000803e3d6000fd5b50505050505050565b600054610100900460ff161580801561051f5750600054600160ff909116105b806105395750303b158015610539575060005460ff166001145b6105c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016101f0565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561062357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8516179055600361066f8382610d0a565b5080156106d357600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60006001600081546106e990610e24565b909155506001546106fd906000908461076a565b60015473ffffffffffffffffffffffffffffffffffffffff821660008181526004602090815260409182902084905581519384528301919091529192507fce875bee0eb1c2442039be2e40da2c23699b040efed11504442b676ec954fa47910160405180910390a1919050565b600080844710156107d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064016101f0565b8251600003610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f60448201526064016101f0565b8383516020850187f5905073ffffffffffffffffffffffffffffffffffffffff81166103e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f790000000000000060448201526064016101f0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610940576109406108ca565b604052919050565b600067ffffffffffffffff821115610962576109626108ca565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006109a161099c84610948565b6108f9565b90508281528383830111156109b557600080fd5b828260208301376000602084830101529392505050565b600082601f8301126109dd57600080fd5b6109ec8383356020850161098e565b9392505050565b600060208284031215610a0557600080fd5b813567ffffffffffffffff811115610a1c57600080fd5b6103e1848285016109cc565b803573ffffffffffffffffffffffffffffffffffffffff8116811461020557600080fd5b600060208284031215610a5e57600080fd5b6109ec82610a28565b60005b83811015610a82578181015183820152602001610a6a565b50506000910152565b60008151808452610aa3816020860160208601610a67565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006109ec6020830184610a8b565b60008060408385031215610afb57600080fd5b823567ffffffffffffffff80821115610b1357600080fd5b610b1f868387016109cc565b93506020850135915080821115610b3557600080fd5b50610b42858286016109cc565b9150509250929050565b60008060408385031215610b5f57600080fd5b823567ffffffffffffffff811115610b7657600080fd5b610b82858286016109cc565b925050610b9160208401610a28565b90509250929050565b60008060408385031215610bad57600080fd5b610bb683610a28565b9150602083013567ffffffffffffffff811115610bd257600080fd5b8301601f81018513610be357600080fd5b610b428582356020840161098e565b600181811c90821680610c0657607f821691505b602082108103610c3f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215610c5757600080fd5b815167ffffffffffffffff811115610c6e57600080fd5b8201601f81018413610c7f57600080fd5b8051610c8d61099c82610948565b818152856020838501011115610ca257600080fd5b610cb3826020830160208601610a67565b95945050505050565b601f8211156106d357600081815260208120601f850160051c81016020861015610ce35750805b601f850160051c820191505b81811015610d0257828155600101610cef565b505050505050565b815167ffffffffffffffff811115610d2457610d246108ca565b610d3881610d328454610bf2565b84610cbc565b602080601f831160018114610d8b5760008415610d555750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610d02565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015610dd857888601518255948401946001909101908401610db9565b5085821015610e1457878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e7c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122072fd7b1247c341746b00305fd9d32268c743289b149fec3c1ca3a8fa0acff8cd64736f6c63430008110033";

type GateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gate__factory extends ContractFactory {
  constructor(...args: GateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Gate";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Gate> {
    return super.deploy(overrides || {}) as Promise<Gate>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Gate {
    return super.attach(address) as Gate;
  }
  connect(signer: Signer): Gate__factory {
    return super.connect(signer) as Gate__factory;
  }
  static readonly contractName: "Gate";
  public readonly contractName: "Gate";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GateInterface {
    return new utils.Interface(_abi) as GateInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gate {
    return new Contract(address, _abi, signerOrProvider) as Gate;
  }
}
